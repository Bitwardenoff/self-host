---
name: Release Digital Ocean 1-Click

on:
  release:
    types: [published]

  push:
    paths:
      - "DigitalOceanMarketplace/**"

  workflow_dispatch:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Login to Azure - CI Subscription
        uses: Azure/login@ec3c14589bd3e9312b3cc8c41e6860e258df9010
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPLE }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@c3b3285993151c5af47cefcb3b9134c28ab479af
        with:
          keyvault: "bitwarden-ci"
          secrets: "digital-ocean-api-key"

      - name: Set version from version.json
        id: set-version
        run: |
          VERSION=$(grep '^ *"coreVersion":' version.json \
            | awk -F\: '{ print $2 }' \
            | sed -e 's/,$//' -e 's/^"//' -e 's/"$//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Digital Ocean Image
        env:
          DIGITALOCEAN_TOKEN: ${{ steps.retrieve-secrets.outputs.digital-ocean-api-key }}
          DIGITALOCEAN_IMG_VERSION: ${{ steps.set-version.outputs.version }}
        working-directory: ./DigitalOceanMarketplace
        run: |
          packer version
          packer build marketplace-image.json

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@bf8757bc21b0cba89461f996ff351821727cf53d

      - name: Digital Ocean Image Cleanup
        env:
          DIGITALOCEAN_TOKEN: ${{ steps.retrieve-secrets.outputs.digital-ocean-api-key }}
        working-directory: ./DigitalOceanMarketplace
        if: ${{ github.event_name != 'release' && github.event_name != 'workflow_dispatch' }}
        run: |
          brew install doctl
          # Authenticate to Digital Ocean.
          doctl auth init -t $DIGITALOCEAN_TOKEN

          # Get the ID from the snapshot build.
          DO_ARTIFACT=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)

          # Force remove the snapshot
          doctl compute image delete $DO_ARTIFACT -f
